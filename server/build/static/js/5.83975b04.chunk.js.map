{"version":3,"file":"static/js/5.83975b04.chunk.js","mappings":"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","sources":["Signup/Signup.jsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { Button, Form, Container, Row, Col,Card } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { signupUtil } from '../apiUtil';\r\n\r\n\r\nfunction Signup() {\r\n\r\n    const [pwdValidation, setPwdValidation] = useState({\r\n        lowercase: false,\r\n        uppercase: false,\r\n        number: false,\r\n        symbol: false,\r\n        length: false\r\n    });\r\n\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const { lowercase, uppercase, number, symbol, length } = pwdValidation;\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const isPwdValid = Object.values(pwdValidation).every(Boolean);\r\n        console.log(isPwdValid);\r\n        setIsValid(isPwdValid);\r\n        console.log({isValid});\r\n    }, [setPwdValidation])\r\n\r\n\r\n\r\n    const validatePasword = (e) => {\r\n        const password = e.target.value;\r\n        console.log(password);\r\n        // regex.test(string)\r\n        const lowercase = /(?=.*[a-z])/.test(password);\r\n        const uppercase = /(?=.*[A-Z])/.test(password);\r\n        const number = /(?=.*\\d)/.test(password);\r\n        const symbol = /(?=.*[\\W_])/.test(password);\r\n        const length = password.length >= 8;\r\n        setPassword(password)\r\n        setPwdValidation({ lowercase, uppercase, number, symbol, length });\r\n    }\r\n\r\n    const signUp = async(e)=>{\r\n        const payload = {name,username,password};\r\n        try {\r\n            const data  = await (await signupUtil(payload)).data;\r\n            console.log(data);\r\n            if(data){\r\n                alert(\"user signup successful\" );\r\n            } \r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col lg={{ offset: 4, span: 4 }} md={{offset:3, span:6}} sm={{offset:1, span:10}}>\r\n                    <Card className=\"mt-3 p-3 signup\">\r\n                        <Card.Title>Signup</Card.Title>\r\n                        <Card.Body>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" onChange={e=>setName(e.target.value)}>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control  placeholder=\"Enter name\" />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"username\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control  placeholder=\"Enter username\" onChange={e=>setUsername(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" onChange={validatePasword} placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" onClick={signUp} type=\"submit\" disabled = {!isValid}>\r\n                                Signup\r\n                            </Button>\r\n                        </Card.Body>\r\n                        <div className='pwd-strength'>\r\n                            <div className={lowercase ? 'text-success' : 'text-danger'}>Lowercase character :- a-z</div>\r\n                            <div className={uppercase ? 'text-success' : 'text-danger'}>Uppercase character :- A-Z</div>\r\n                            <div className={number ? 'text-success' : 'text-danger'}>Numeric character :- 0-9</div>\r\n                            <div className={symbol ? 'text-success' : 'text-danger'}>Special character :- !@#$%^&*()_+</div>\r\n                            <div className={length ? 'text-success' : 'text-danger'}>Password should consist of 8 or more character</div>\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Signup","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["useState","lowercase","uppercase","number","symbol","length","pwdValidation","setPwdValidation","isValid","setIsValid","password","setPassword","username","setUsername","name","setName","useEffect","isPwdValid","Object","values","every","Boolean","console","log","signUp","e","payload","signupUtil","data","alert","error","fluid","lg","offset","span","md","sm","className","controlId","onChange","target","value","placeholder","type","test","variant","onClick","disabled","CardImg","React","ref","bsPrefix","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Row","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push"],"sourceRoot":""}